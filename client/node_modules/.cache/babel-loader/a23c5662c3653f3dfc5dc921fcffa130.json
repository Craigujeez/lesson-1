{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n  apiKey: \"AIzaSyAByu0PbfC4ivc5XuMh_Tj3nbzppyGRbw8\",\n  authDomain: \"crown-db-b1c97.firebaseapp.com\",\n  databaseURL: \"https://crown-db-b1c97.firebaseio.com\",\n  projectId: \"crown-db-b1c97\",\n  storageBucket: \"crown-db-b1c97.appspot.com\",\n  messagingSenderId: \"693624680939\",\n  appId: \"1:693624680939:web:64bdeefa29dbdf4dfa69ae\",\n  measurementId: \"G-6R40MGLKQ8\"\n}; // function below stores our user in our firebase database known as fire store\n\nexport var createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            // searches for user based off their uinique id\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log('error creating user', _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nco; // initialise app with the config object \n\nfirebase.initializeApp(config); // export firebase functions needed for the app;\n\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore(); // get the google authentication provider function\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(provider);\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/nnamdiujah/Documents/React/lesson-1/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","co","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf,C,CAWE;;AAEA,OAAO,IAAMC,yBAAyB;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAElCD,QAFkC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGtC;AACKE,YAAAA,OAJiC,GAIvBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAJuB;AAAA;AAAA,mBAKhBH,OAAO,CAACI,GAAR,EALgB;;AAAA;AAKjCC,YAAAA,QALiC;;AAAA,gBAOlCA,QAAQ,CAACC,MAPyB;AAAA;AAAA;AAAA;;AAQ5BC,YAAAA,WAR4B,GAQNT,QARM,CAQ5BS,WAR4B,EAQfC,KARe,GAQNV,QARM,CAQfU,KARe;AAS7BC,YAAAA,SAT6B,GASjB,IAAIC,IAAJ,EATiB;AAAA;AAAA;AAAA,mBAYzBV,OAAO,CAACW,GAAR;AAAaJ,cAAAA,WAAW,EAAXA,WAAb;AAA0BC,cAAAA,KAAK,EAALA,KAA1B;AAAgCC,cAAAA,SAAS,EAATA;AAAhC,eAA8CV,cAA9C,EAZyB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAc/Ba,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC,YAAMC,OAAzC;;AAd+B;AAAA,6CAkBhCd,OAlBgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAzBH,yBAAyB;AAAA;AAAA;AAAA,GAA/B;AAqBPkB,EAAE,C,CAEF;;AAEA5B,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB,E,CAEA;;AAEA,OAAO,IAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,IAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AAEA,IAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAG;AAAV,CAA7B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN;AAAA,CAAzB;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAByu0PbfC4ivc5XuMh_Tj3nbzppyGRbw8\",\n    authDomain: \"crown-db-b1c97.firebaseapp.com\",\n    databaseURL: \"https://crown-db-b1c97.firebaseio.com\",\n    projectId: \"crown-db-b1c97\",\n    storageBucket: \"crown-db-b1c97.appspot.com\",\n    messagingSenderId: \"693624680939\",\n    appId: \"1:693624680939:web:64bdeefa29dbdf4dfa69ae\",\n    measurementId: \"G-6R40MGLKQ8\"\n  };\n\n  // function below stores our user in our firebase database known as fire store\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n      // check if user exists , if he doesnt exist the function terminates\n    if (!userAuth) return ;\n     // searches for user based off their uinique id\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get();\n    // if user doesnt exist in store, the user is then added to store\n    if (!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({displayName, email,createdAt, ...additionalData})\n        } catch (error){\n            console.log('error creating user', error.message);\n            \n        }\n    }\n    return userRef;\n  }\n\n  co\n  \n  // initialise app with the config object \n\n  firebase.initializeApp(config);\n\n  // export firebase functions needed for the app;\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  // get the google authentication provider function\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  provider.setCustomParameters({prompt : 'select_account'});\n\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase ;"]},"metadata":{},"sourceType":"module"}