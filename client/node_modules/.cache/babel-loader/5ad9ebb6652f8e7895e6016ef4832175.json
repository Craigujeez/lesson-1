{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import{createStore,applyMiddleware,compose}from'redux';import logger from'redux-logger';import{Provider,useSelector}from'react-redux';import thunk from'redux-thunk';import{createFirestoreInstance,reduxFirestore,getFirestore}from'redux-firestore';import{ReactReduxFirebaseProvider,getFirebase}from'react-redux-firebase';import firebase from\"firebase/app\";import fbConfig from\"./firebase/firebase.utils\";import rootReducer from'./reducers/index';import{BrowserRouter}from'react-router-dom';import Spinner from\"./components/spinner/spinner.js\";import App from'./App';import*as serviceWorker from'./serviceWorker';var middlewares=[thunk.withExtraArgument({getFirebase:getFirebase,getFirestore:getFirestore})];if(process.env.NODE_ENV===\"development\"){middlewares.push(logger);}var store=createStore(rootReducer,compose(applyMiddleware.apply(void 0,middlewares),reduxFirestore(fbConfig)));var rrfConfig={userProfile:'users',useFirestoreForProfile:true,enableRedirectHandling:false,resetBeforeLogin:false};var rrfProps={firebase:firebase,config:rrfConfig,dispatch:store.dispatch,createFirestoreInstance:createFirestoreInstance// <- needed if using firestore\n};var AuthIsLoaded=function AuthIsLoaded(_ref){var children=_ref.children;var auth=useSelector(function(state){return state.firebase.auth;});if(!auth.isLoaded)return/*#__PURE__*/React.createElement(Spinner,null);return children;};ReactDOM.render(/*#__PURE__*/React.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(ReactReduxFirebaseProvider,rrfProps,/*#__PURE__*/React.createElement(AuthIsLoaded,null,/*#__PURE__*/React.createElement(App,null))))),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nnamdiujah/Documents/React/lesson-1/client/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","compose","logger","Provider","useSelector","thunk","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","firebase","fbConfig","rootReducer","BrowserRouter","Spinner","App","serviceWorker","middlewares","withExtraArgument","process","env","NODE_ENV","push","store","rrfConfig","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","isLoaded","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAAQC,WAAR,CAAqBC,eAArB,CAAsCC,OAAtC,KAAoD,OAApD,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAAQC,QAAR,CAAiBC,WAAjB,KAAmC,aAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAAQC,uBAAR,CAAiCC,cAAjC,CAAiDC,YAAjD,KAAqE,iBAArE,CACA,OAASC,0BAAT,CAAqCC,WAArC,KAAwD,sBAAxD,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,kBAAxB,CACA,OAAQC,aAAR,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAACb,KAAK,CAACc,iBAAN,CAAwB,CAAET,WAAW,CAAXA,WAAF,CAAeF,YAAY,CAAZA,YAAf,CAAxB,CAAD,CAApB,CAEA,GAAIY,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA2C,CACvCJ,WAAW,CAACK,IAAZ,CAAiBrB,MAAjB,EACH,CAGD,GAAMsB,CAAAA,KAAK,CAAGzB,WAAW,CAACc,WAAD,CACrBZ,OAAO,CACHD,eAAe,MAAf,QAAmBkB,WAAnB,CADG,CAEHX,cAAc,CAACK,QAAD,CAFX,CADc,CAAzB,CAOA,GAAMa,CAAAA,SAAS,CAAG,CACdC,WAAW,CAAE,OADC,CAEdC,sBAAsB,CAAE,IAFV,CAGdC,sBAAsB,CAAE,KAHV,CAIdC,gBAAgB,CAAE,KAJJ,CAAlB,CAOA,GAAMC,CAAAA,QAAQ,CAAG,CACbnB,QAAQ,CAARA,QADa,CAEboB,MAAM,CAAEN,SAFK,CAGbO,QAAQ,CAAER,KAAK,CAACQ,QAHH,CAIb1B,uBAAuB,CAAvBA,uBAAwB;AAJX,CAAjB,CAOA,GAAM2B,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACnC,GAAMC,CAAAA,IAAI,CAAG/B,WAAW,CAAC,SAAAgC,KAAK,QAAIA,CAAAA,KAAK,CAACzB,QAAN,CAAewB,IAAnB,EAAN,CAAxB,CACA,GAAI,CAACA,IAAI,CAACE,QAAV,CAAoB,mBAAO,oBAAC,OAAD,MAAP,CAChB,MAAOH,CAAAA,QAAP,CACP,CAJD,CAMApC,QAAQ,CAACwC,MAAT,cACQ,oBAAC,aAAD,mBACI,oBAAC,QAAD,EAAU,KAAK,CAAEd,KAAjB,eACI,oBAAC,0BAAD,CAAgCM,QAAhC,cACI,oBAAC,YAAD,mBACI,oBAAC,GAAD,MADJ,CADJ,CADJ,CADJ,CADR,CAS0BS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAT1B,EAWA;AACA;AACA;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport logger from 'redux-logger';\nimport {Provider,useSelector} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from \"firebase/app\";\nimport fbConfig from \"./firebase/firebase.utils\";\nimport rootReducer from './reducers/index';\nimport {BrowserRouter} from 'react-router-dom';\nimport Spinner from \"./components/spinner/spinner.js\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\n\nif (process.env.NODE_ENV === \"development\"){\n    middlewares.push(logger)\n}\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(...middlewares),\n        reduxFirestore(fbConfig)\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}\n\nconst AuthIsLoaded = ({ children }) => {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!auth.isLoaded) return <Spinner/>;\n        return children\n}\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <ReactReduxFirebaseProvider {...rrfProps}>\n                    <AuthIsLoaded>\n                        <App/>\n                    </AuthIsLoaded>\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}