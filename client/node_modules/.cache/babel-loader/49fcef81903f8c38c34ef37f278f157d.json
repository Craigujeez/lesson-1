{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nnamdiujah/Documents/React/lesson-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nnamdiujah/Documents/React/lesson-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/nnamdiujah/Documents/React/lesson-1/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{firestore,convertCollectionsSnapshotToMap,convertDirectorySnapshotToMap}from\"../firebase/firebase.utils\";var initialState={user:null,collection:[],directory:[]};var Shop=function Shop(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"LOAD_USER\":return _objectSpread({},state,{user:action.user});case\"UPDATE_COLLECTION\":return _objectSpread({},state,{collection:action.result});case\"UPDATE_DIRECTORY\":return _objectSpread({},state,{directory:action.result});default:return state;}};export default Shop;export var updateCollection=function updateCollection(){return function(dispatch){try{var collectionRef=firestore.collection(\"collections\");return collectionRef.onSnapshot(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(snapshot){var collectionsMap;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:collectionsMap=convertCollectionsSnapshotToMap(snapshot);dispatch({type:\"UPDATE_COLLECTION\",result:collectionsMap});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}catch(err){alert(err);}};};export var updateDirectory=function updateDirectory(){return function(dispatch){try{var directoryRef=firestore.collection(\"directory\");return directoryRef.onSnapshot(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(snapshot){var directoryMap;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:directoryMap=convertDirectorySnapshotToMap(snapshot);dispatch({type:\"UPDATE_DIRECTORY\",result:directoryMap});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());}catch(err){alert(err);}};};","map":{"version":3,"sources":["/Users/nnamdiujah/Documents/React/lesson-1/client/src/reducers/Shop.js"],"names":["firestore","convertCollectionsSnapshotToMap","convertDirectorySnapshotToMap","initialState","user","collection","directory","Shop","state","action","type","result","updateCollection","dispatch","collectionRef","onSnapshot","snapshot","collectionsMap","err","alert","updateDirectory","directoryRef","directoryMap"],"mappings":"ofAAA,OAAQA,SAAR,CAAmBC,+BAAnB,CAAoDC,6BAApD,KAAwF,4BAAxF,CAEA,GAAMC,CAAAA,YAAY,CAAC,CACfC,IAAI,CAAE,IADS,CAEfC,UAAU,CAAE,EAFG,CAGfC,SAAS,CAAE,EAHI,CAAnB,CAMA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAgC,IAA/BC,CAAAA,KAA+B,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CACzC,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,WAAL,CACI,wBACKF,KADL,EAEEJ,IAAI,CAAEK,MAAM,CAACL,IAFf,GAIJ,IAAK,mBAAL,CACE,wBACKI,KADL,EAEEH,UAAU,CAAEI,MAAM,CAACE,MAFrB,GAIF,IAAK,kBAAL,CACE,wBACKH,KADL,EAEEF,SAAS,CAAEG,MAAM,CAACE,MAFpB,GAKF,QACI,MAAOH,CAAAA,KAAP,CAlBR,CAoBH,CArBD,CAuBA,cAAeD,CAAAA,IAAf,CAEA,MAAO,IAAMK,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpC,MAAO,UAACC,QAAD,CAAc,CACnB,GAAI,CACF,GAAMC,CAAAA,aAAa,CAAGd,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB,CAEA,MAAOS,CAAAA,aAAa,CAACC,UAAd,0FAA0B,iBAAMC,QAAN,qIACvBC,cADuB,CACNhB,+BAA+B,CAACe,QAAD,CADzB,CAE7BH,QAAQ,CAAC,CAACH,IAAI,CAAE,mBAAP,CAA4BC,MAAM,CAAEM,cAApC,CAAD,CAAR,CAF6B,sDAA1B,+DAAP,CAKD,CAAC,MAAMC,GAAN,CAAU,CACVC,KAAK,CAACD,GAAD,CAAL,CACD,CACF,CAZD,CAaD,CAdM,CAgBP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,MAAO,UAACP,QAAD,CAAc,CACnB,GAAI,CACF,GAAMQ,CAAAA,YAAY,CAAGrB,SAAS,CAACK,UAAV,CAAqB,WAArB,CAArB,CAEA,MAAOgB,CAAAA,YAAY,CAACN,UAAb,2FAAyB,kBAAMC,QAAN,uIACtBM,YADsB,CACPpB,6BAA6B,CAACc,QAAD,CADtB,CAE5BH,QAAQ,CAAC,CAACH,IAAI,CAAE,kBAAP,CAA2BC,MAAM,CAAEW,YAAnC,CAAD,CAAR,CAF4B,wDAAzB,iEAAP,CAKD,CAAC,MAAMJ,GAAN,CAAU,CACVC,KAAK,CAACD,GAAD,CAAL,CACD,CACF,CAZD,CAaD,CAdM","sourcesContent":["import {firestore, convertCollectionsSnapshotToMap, convertDirectorySnapshotToMap} from \"../firebase/firebase.utils\";\n\nconst initialState={\n    user: null,\n    collection: [],\n    directory: [],\n}\n\nconst Shop = (state=initialState, action) => {\n    switch (action.type) {\n        case \"LOAD_USER\":\n            return {\n              ...state,\n              user: action.user,\n            };\n        case \"UPDATE_COLLECTION\":\n          return {\n            ...state,\n            collection: action.result\n          };\n        case \"UPDATE_DIRECTORY\":\n          return {\n            ...state,\n            directory: action.result\n          };\n    \n        default:\n            return state;\n    }\n}\n\nexport default Shop;\n\nexport const updateCollection = () => {\n  return (dispatch) => {\n    try {\n      const collectionRef = firestore.collection(\"collections\");\n  \n      return collectionRef.onSnapshot( async snapshot => {\n          const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n          dispatch({type: \"UPDATE_COLLECTION\", result: collectionsMap});\n      })\n\n    } catch(err){\n      alert(err)\n    }\n  }\n}\n\nexport const updateDirectory = () => {\n  return (dispatch) => {\n    try {\n      const directoryRef = firestore.collection(\"directory\");\n  \n      return directoryRef.onSnapshot( async snapshot => {\n          const directoryMap = convertDirectorySnapshotToMap(snapshot);\n          dispatch({type: \"UPDATE_DIRECTORY\", result: directoryMap});\n      })\n\n    } catch(err){\n      alert(err)\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}