{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyAByu0PbfC4ivc5XuMh_Tj3nbzppyGRbw8\",authDomain:\"crown-db-b1c97.firebaseapp.com\",databaseURL:\"https://crown-db-b1c97.firebaseio.com\",projectId:\"crown-db-b1c97\",storageBucket:\"crown-db-b1c97.appspot.com\",messagingSenderId:\"693624680939\",appId:\"1:693624680939:web:64bdeefa29dbdf4dfa69ae\",measurementId:\"G-6R40MGLKQ8\"};// function below stores our user in our firebase database known as fire store\nexport var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:// searches for user based off their uinique id\nuserRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();// initialise app with the config object \nfirebase.initializeApp(config);// export firebase functions needed for the app;\nexport var auth=firebase.auth();export var firestore=firebase.firestore();// get the google authentication provider function\nvar provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/nnamdiujah/Documents/React/lesson-1/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"+dAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,MAAM,CAAE,yCADG,CAEXC,UAAU,CAAE,gCAFD,CAGXC,WAAW,CAAE,uCAHF,CAIXC,SAAS,CAAE,gBAJA,CAKXC,aAAa,CAAE,4BALJ,CAMXC,iBAAiB,CAAE,cANR,CAOXC,KAAK,CAAE,2CAPI,CAQXC,aAAa,CAAE,cARJ,CAAf,CAWE;AAEA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,sKAElCD,QAFkC,iEAGtC;AACKE,OAJiC,CAIvBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAJuB,uBAKhBH,CAAAA,OAAO,CAACI,GAAR,EALgB,QAKjCC,QALiC,kBAOlCA,QAAQ,CAACC,MAPyB,0BAQ5BC,WAR4B,CAQNT,QARM,CAQ5BS,WAR4B,CAQfC,KARe,CAQNV,QARM,CAQfU,KARe,CAS7BC,SAT6B,CASjB,GAAIC,CAAAA,IAAJ,EATiB,wCAYzBV,CAAAA,OAAO,CAACW,GAAR,gBAAaJ,WAAW,CAAXA,WAAb,CAA0BC,KAAK,CAALA,KAA1B,CAAgCC,SAAS,CAATA,SAAhC,EAA8CV,cAA9C,EAZyB,0FAc/Ba,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAd+B,wCAkBhCd,OAlBgC,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAqBP;AAEAV,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,EAEA;AAEA,MAAO,IAAM4B,CAAAA,IAAI,CAAG7B,QAAQ,CAAC6B,IAAT,EAAb,CACP,MAAO,IAAMf,CAAAA,SAAS,CAAGd,QAAQ,CAACc,SAAT,EAAlB,CAEP;AAEA,GAAMgB,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,CAEAD,QAAQ,CAACE,mBAAT,CAA6B,CAACC,MAAM,CAAG,gBAAV,CAA7B,EAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe9B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyAByu0PbfC4ivc5XuMh_Tj3nbzppyGRbw8\",\n    authDomain: \"crown-db-b1c97.firebaseapp.com\",\n    databaseURL: \"https://crown-db-b1c97.firebaseio.com\",\n    projectId: \"crown-db-b1c97\",\n    storageBucket: \"crown-db-b1c97.appspot.com\",\n    messagingSenderId: \"693624680939\",\n    appId: \"1:693624680939:web:64bdeefa29dbdf4dfa69ae\",\n    measurementId: \"G-6R40MGLKQ8\"\n  };\n\n  // function below stores our user in our firebase database known as fire store\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n      // check if user exists , if he doesnt exist the function terminates\n    if (!userAuth) return ;\n     // searches for user based off their uinique id\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get();\n    // if user doesnt exist in store, the user is then added to store\n    if (!snapShot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({displayName, email,createdAt, ...additionalData})\n        } catch (error){\n            console.log('error creating user', error.message);\n            \n        }\n    }\n    return userRef;\n  }\n  \n  // initialise app with the config object \n\n  firebase.initializeApp(config);\n\n  // export firebase functions needed for the app;\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  // get the google authentication provider function\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  provider.setCustomParameters({prompt : 'select_account'});\n\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n  export default firebase ;"]},"metadata":{},"sourceType":"module"}