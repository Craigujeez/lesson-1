{"ast":null,"code":"import _toConsumableArray from\"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/nnamdiujah/Documents/React/lesson-1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initialState={hidden:true,cartItems:[],totalPrice:0};var addToCart=function addToCart(state,action){var existingCartItem=state.cartItems.find(function(cartItem){return cartItem.id===action.payload.id;});// checking to see if item already exists in cart\nif(existingCartItem){return state.cartItems.map(function(cartItem){return cartItem.id===action.payload.id?_objectSpread({},cartItem,{quantity:cartItem.quantity+1}):cartItem;});// if it exists we increase the quantity of the item instead of creating duplicates\n}return[].concat(_toConsumableArray(state.cartItems),[_objectSpread({},action.payload,{quantity:1})]);// if the item doesnt exist we add it to the cart with the added property of quantity\n};var clearFromCart=function clearFromCart(state,action){var newCart=state.cartItems.filter(function(item){return item.id!==action.payload.id;});return newCart;};var RemoveItemFromCart=function RemoveItemFromCart(state,action){if(action.payload.quantity===1){return clearFromCart(state,action);}return state.cartItems.map(function(cartItem){return cartItem.id===action.payload.id?_objectSpread({},cartItem,{quantity:cartItem.quantity-1}):cartItem;});};var TotalPrice=function TotalPrice(state){var prices=[];// const newState = state.cartItems.slice(0);\nstate.cartItems.map(function(item){return prices.push(item.quantity*item.price);});console.log(prices,\"total\");var sum=prices.reduce(function(a,b){return a+b;},0);return sum;};var cart=function cart(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_TO_CART\":return _objectSpread({},state,{cartItems:addToCart(state,action),totalPrice:TotalPrice(state)});case\"TOGGLE_CART_HIDDEN\":return _objectSpread({},state,{hidden:!state.hidden});case\"CLEAR_ITEM_FROM_CART\":return _objectSpread({},state,{cartItems:clearFromCart(state,action),totalPrice:TotalPrice(state)});case\"REMOVE_ITEM\":return _objectSpread({},state,{cartItems:RemoveItemFromCart(state,action),totalPrice:TotalPrice(state)});default:return state;}};export default cart;","map":{"version":3,"sources":["/Users/nnamdiujah/Documents/React/lesson-1/src/reducers/cart.js"],"names":["initialState","hidden","cartItems","totalPrice","addToCart","state","action","existingCartItem","find","cartItem","id","payload","map","quantity","clearFromCart","newCart","filter","item","RemoveItemFromCart","TotalPrice","prices","push","price","console","log","sum","reduce","a","b","cart","type"],"mappings":"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","sourcesContent":["const initialState={\n    hidden: true,\n    cartItems: [],\n    totalPrice: 0,\n}\n\nconst addToCart = (state,action) => {\n    const existingCartItem = state.cartItems.find(cartItem => cartItem.id === action.payload.id) // checking to see if item already exists in cart\n\n    if(existingCartItem){\n        return state.cartItems.map(cartItem => cartItem.id === action.payload.id ? {...cartItem, quantity: cartItem.quantity + 1} : cartItem)  // if it exists we increase the quantity of the item instead of creating duplicates\n    }\n\n    return [...state.cartItems, {...action.payload, quantity: 1}]     // if the item doesnt exist we add it to the cart with the added property of quantity\n}\n\nconst clearFromCart = (state,action) => {\n    const newCart = state.cartItems.filter(item => item.id !== action.payload.id);\n    return newCart;\n};\n\nconst RemoveItemFromCart = (state,action) => {\n    if(action.payload.quantity === 1){\n        return clearFromCart(state,action)\n    }\n    return state.cartItems.map(cartItem => cartItem.id === action.payload.id ? {...cartItem, quantity: cartItem.quantity - 1} : cartItem)\n};\n\nconst TotalPrice = (state) => {\n    let prices = [];\n\n    // const newState = state.cartItems.slice(0);\n\n    state.cartItems.map(item => prices.push(item.quantity * item.price))\n\n    console.log(prices, \"total\");\n\n    const sum = prices.reduce(function(a, b){\n        return a + b;\n    }, 0);\n\n    return sum;\n}\n\nconst cart = (state=initialState, action) => {\n    switch (action.type) {\n        case \"ADD_TO_CART\":\n            return {\n              ...state,\n              cartItems: addToCart(state,action),\n              totalPrice: TotalPrice(state),\n            };\n        case \"TOGGLE_CART_HIDDEN\":\n            return {\n                ...state,\n                hidden: !state.hidden,\n            };\n        case \"CLEAR_ITEM_FROM_CART\":\n            return {\n                ...state,\n                cartItems: clearFromCart(state,action),\n                totalPrice: TotalPrice(state),\n            };\n        case \"REMOVE_ITEM\":\n            return {\n                ...state,\n                cartItems: RemoveItemFromCart(state,action),\n                totalPrice: TotalPrice(state),\n            };\n            \n        default:\n            return state;\n    }\n}\n\nexport default cart;"]},"metadata":{},"sourceType":"module"}