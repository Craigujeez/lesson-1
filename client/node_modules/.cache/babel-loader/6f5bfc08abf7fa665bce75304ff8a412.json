{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/nnamdiujah/Documents/React/lesson-1/src/index.js\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from \"firebase/app\";\nimport fbConfig from \"./firebase/firebase.utils\";\nimport rootReducer from './reducers/index';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nvar middlewares = [thunk.withExtraArgument({\n  getFirebase: getFirebase,\n  getFirestore: getFirestore\n})];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nvar store = createStore(rootReducer, compose(applyMiddleware.apply(void 0, middlewares), reduxFirestore(fbConfig)));\nvar rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n};\nvar rrfProps = {\n  firebase: firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance: createFirestoreInstance // <- needed if using firestore\n\n};\n\nvar AuthIsLoaded = function AuthIsLoaded(_ref) {\n  var children = _ref.children;\n  var auth = useSelector(function (state) {\n    return state.firebase.auth;\n  });\n  if (!auth.isLoaded) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }\n  }, \"Loading Screen...\");\n  return children;\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 25\n  }\n}))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/nnamdiujah/Documents/React/lesson-1/src/index.js"],"names":["React","ReactDOM","createStore","applyMiddleware","compose","logger","Provider","useSelector","thunk","createFirestoreInstance","reduxFirestore","getFirestore","ReactReduxFirebaseProvider","getFirebase","firebase","fbConfig","rootReducer","BrowserRouter","App","serviceWorker","middlewares","withExtraArgument","process","env","NODE_ENV","push","store","rrfConfig","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","isLoaded","render","document","getElementById","unregister"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,QAAR,EAAiBC,WAAjB,QAAmC,aAAnC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,uBAAR,EAAiCC,cAAjC,EAAiDC,YAAjD,QAAqE,iBAArE;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,IAAMC,WAAW,GAAG,CAACZ,KAAK,CAACa,iBAAN,CAAwB;AAAER,EAAAA,WAAW,EAAXA,WAAF;AAAeF,EAAAA,YAAY,EAAZA;AAAf,CAAxB,CAAD,CAApB;;AAEA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCJ,EAAAA,WAAW,CAACK,IAAZ,CAAiBpB,MAAjB;AACH;;AAGD,IAAMqB,KAAK,GAAGxB,WAAW,CAACc,WAAD,EACrBZ,OAAO,CACHD,eAAe,MAAf,SAAmBiB,WAAnB,CADG,EAEHV,cAAc,CAACK,QAAD,CAFX,CADc,CAAzB;AAOA,IAAMY,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,OADC;AAEdC,EAAAA,sBAAsB,EAAE,IAFV;AAGdC,EAAAA,sBAAsB,EAAE,KAHV;AAIdC,EAAAA,gBAAgB,EAAE;AAJJ,CAAlB;AAOA,IAAMC,QAAQ,GAAG;AACblB,EAAAA,QAAQ,EAARA,QADa;AAEbmB,EAAAA,MAAM,EAAEN,SAFK;AAGbO,EAAAA,QAAQ,EAAER,KAAK,CAACQ,QAHH;AAIbzB,EAAAA,uBAAuB,EAAvBA,uBAJa,CAIW;;AAJX,CAAjB;;AAOA,IAAM0B,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnC,MAAMC,IAAI,GAAG9B,WAAW,CAAC,UAAA+B,KAAK;AAAA,WAAIA,KAAK,CAACxB,QAAN,CAAeuB,IAAnB;AAAA,GAAN,CAAxB;AACA,MAAI,CAACA,IAAI,CAACE,QAAV,EAAoB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAChB,SAAOH,QAAP;AACP,CAJD;;AAMAnC,QAAQ,CAACuC,MAAT,eACQ,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,0BAAD,oBAAgCM,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,CADJ,CADR,EAS0BS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAT1B,E,CAWA;AACA;AACA;;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport logger from 'redux-logger';\nimport {Provider,useSelector} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from \"firebase/app\";\nimport fbConfig from \"./firebase/firebase.utils\";\nimport rootReducer from './reducers/index';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\n\nif (process.env.NODE_ENV === \"development\"){\n    middlewares.push(logger)\n}\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(...middlewares),\n        reduxFirestore(fbConfig)\n    )\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    enableRedirectHandling: false,\n    resetBeforeLogin: false\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance // <- needed if using firestore\n}\n\nconst AuthIsLoaded = ({ children }) => {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!auth.isLoaded) return <div>Loading Screen...</div>;\n        return children\n}\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <ReactReduxFirebaseProvider {...rrfProps}>\n                    <AuthIsLoaded>\n                        <App/>\n                    </AuthIsLoaded>\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}